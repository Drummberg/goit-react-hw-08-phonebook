{"version":3,"file":"static/js/256.60620086.chunk.js","mappings":"yRAGaA,EAAQC,EAAAA,GAAAA,GAAH,oEAKLC,GAAOD,EAAAA,EAAAA,IAAOE,EAAAA,EAAPF,CAAH,yIAQJG,EAAQH,EAAAA,GAAAA,MAAH,uIAQLI,EAAQJ,EAAAA,GAAAA,MAAH,2SAgBLK,EAASL,EAAAA,GAAAA,OAAH,gW,SClCbM,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAASP,GAAjC,eAAOQ,EAAP,KAAaC,EAAb,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MACpCH,GAAQ,SAAAI,GAAQ,yBACTA,GADS,cAEXZ,EAAOW,QAUhB,OACC,UAACjB,EAAD,CAAMmB,SAPc,SAAAC,GACjBA,EAAMC,iBACVX,EAASY,EAAAA,EAAAA,SAAwBT,IACjCC,EAAQT,IAIP,WACG,SAACP,EAAD,wBACA,UAACI,EAAD,mBAEE,SAACC,EAAD,CACEoB,KAAK,OACLjB,KAAK,OACLW,MAAOJ,EAAKP,KACZkB,YAAY,aACZC,SAAUV,QAId,UAACb,EAAD,oBAEE,SAACC,EAAD,CACEoB,KAAK,QACLjB,KAAK,QACLW,MAAOJ,EAAKN,MACZiB,YAAY,cACZC,SAAUV,QAId,UAACb,EAAD,uBAEE,SAACC,EAAD,CACEoB,KAAK,WACLjB,KAAK,WACLW,MAAOJ,EAAKL,SACZgB,YAAY,iBACZC,SAAUV,QAId,SAACX,EAAD,CAAQmB,KAAK,SAAb","sources":["components/views/RegisterPage/RegisterPage.styled.jsx","components/views/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport Box from '@mui/material/Box';\n\nexport const Title = styled.h2`\n  font-size: 24px;\n  margin-bottom: 20px;\n`;\n\nexport const Form = styled(Box)`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 300px;\n  margin: 100px auto 0px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin: 0 0 5px 25px;\n  font-weight: 500;\n  font-size: 20px;\n`;\n\nexport const Input = styled.input`\n  position: relative;\n  font-size: 14px;\n  background: #ffffff;\n  border-radius: 5px;\n  line-height: 25px;\n  height: 25px;\n  width: 250px;\n  padding: 0 10px;\n  border: 1px solid #cacaca;\n  margin-bottom: 20px;\n  &:active {\n    box-shadow: rgb(155, 25, 233);\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 80px; \n  font-size: 16px;\n  width: 130px;\n  height: 30px;\n  background-color: transparent;\n  cursor: pointer;\n  border-radius: 5px;\n  &:active {\n    background-color: rgb(75, 75, 193);\n  }\n  &:hover {\n    border-radius: 5px;\n    color: white;\n    font-weight: 700;\n    background-color: blue;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../../Redux/auth/auth-operations';\nimport { Title, Form, Label, Input, Button } from './RegisterPage.styled';\n\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function RegisterPage() {\n    const dispatch = useDispatch();\n    const [user, setUser] = useState(initialState);\n    \n\n    const handleChange = ({ target: { name, value } }) => {\n        setUser(prevUser => ({\n            ...prevUser,\n            [name]: value,\n        }))\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n    dispatch(authOperations.register(user));\n    setUser(initialState);\n    };\n    \n    return (\n     <Form onSubmit={handleSubmit} >\n        <Title>Register</Title>\n        <Label>\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            value={user.name}\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n            />\n        </Label>\n\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={user.email}\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n            />\n        </Label>\n\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={user.password}\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n            />\n        </Label>\n\n        <Button type=\"submit\">\n          Register\n        </Button>\n      </Form>\n    )\n} "],"names":["Title","styled","Form","Box","Label","Input","Button","initialState","name","email","password","RegisterPage","dispatch","useDispatch","useState","user","setUser","handleChange","target","value","prevUser","onSubmit","event","preventDefault","authOperations","type","placeholder","onChange"],"sourceRoot":""}