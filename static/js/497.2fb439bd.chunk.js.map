{"version":3,"file":"static/js/497.2fb439bd.chunk.js","mappings":"0RAQMA,EAAe,CACnBC,KAAM,GACNC,MAAO,GACPC,SAAU,IAGG,SAASC,IACpB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAASP,GAAjC,eAAOQ,EAAP,KAAaC,EAAb,KAGMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUV,EAAoB,EAApBA,KAAMW,EAAc,EAAdA,MACpCH,GAAQ,SAAAI,GAAQ,yBACTA,GADS,cAEXZ,EAAOW,QAUhB,OACA,UAAC,IAAD,CAAME,MAAO,CAAEC,MAAO,QAASC,OAAQ,aAAcC,YAAa,QAAlE,WACQ,SAAC,WAAD,CAAaC,GAAG,KAAKJ,MAAO,CAAEK,WAAY,OAAQC,MAAO,QAASC,YAAa,SAA/E,wBACA,SAAC,SAAD,WACR,UAAC,IAAD,CAAMC,SAVe,SAAAC,GACjBA,EAAMC,iBACVnB,EAASoB,EAAAA,EAAAA,SAAwBjB,IACjCC,EAAQT,IAOsB0B,aAAa,KAA3C,WACI,SAAC,UAAD,CAAYC,UAAU,OAAOC,UAAU,gBAAvC,UACA,UAAC,UAAD,mBAEE,SAAC,YAAD,CACEC,KAAK,OACL5B,KAAK,OACLW,MAAOJ,EAAKP,KACZ6B,YAAY,aACZC,SAAUrB,EACVI,MAAO,CAAEC,MAAO,iBAIpB,SAAC,UAAD,CAAYY,UAAU,OAAOC,UAAU,iBAAvC,UACA,UAAC,UAAD,oBAEE,SAAC,YAAD,CACEC,KAAK,QACL5B,KAAK,QACLW,MAAOJ,EAAKN,MACZ4B,YAAY,cACZC,SAAUrB,EACVI,MAAO,CAAEC,MAAO,iBAIpB,SAAC,UAAD,CAAYY,UAAU,OAAOC,UAAU,oBAAvC,UACA,UAAC,UAAD,uBAGE,SAAC,YAAD,CACEC,KAAK,WACL5B,KAAK,WACLW,MAAOJ,EAAKL,SACZ2B,YAAY,iBACZC,SAAUrB,EACVI,MAAO,CAAEC,MAAO,iBAIpB,SAAC,IAAD,CAAQiB,QAAQ,OAAOH,KAAK,SAASf,MAAO,CAACK,WAAY,OAAQC,MAAO,QAAQa,WAAW,SAA3F","sources":["components/views/RegisterPage/RegisterPage.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOperations from '../../../Redux/auth/auth-operations';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\n\n\nconst initialState = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport default function RegisterPage() {\n    const dispatch = useDispatch();\n    const [user, setUser] = useState(initialState);\n    \n\n    const handleChange = ({ target: { name, value } }) => {\n        setUser(prevUser => ({\n            ...prevUser,\n            [name]: value,\n        }))\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n    dispatch(authOperations.register(user));\n    setUser(initialState);\n    };\n    \n    return (\n    <Card style={{ width: '400px', margin: '150px auto', borderStyle: 'none' }}>\n            <Card.Header as=\"h2\" style={{ background: '#000', color: 'white', paddingLeft: '150px' }}> Register</Card.Header>\n            <Card.Body>\n    <Form onSubmit={handleSubmit} autoComplete=\"on\">\n        <Form.Group className=\"mb-3\" controlId=\"formBasicText\">            \n        <Form.Label>\n          Name\n          <Form.Control\n            type=\"text\"\n            name=\"name\"\n            value={user.name}\n            placeholder=\"Enter name\"\n            onChange={handleChange}\n            style={{ width: '350px' }}\n            />\n        </Form.Label>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">            \n        <Form.Label>\n          Email\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            value={user.email}\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n            style={{ width: '350px' }}\n            />\n        </Form.Label>\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n        <Form.Label>\n                        \n          Password\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={user.password}\n            placeholder=\"Enter password\"\n            onChange={handleChange}\n            style={{ width: '350px' }}\n            />\n        </Form.Label>\n        </Form.Group>\n        <Button variant=\"dark\" type=\"submit\" style={{background: '#000', color: 'white',marginLeft:'150px'}}>\n          Register\n        </Button>\n        </Form>\n        </Card.Body>\n    </Card>\n    )\n} "],"names":["initialState","name","email","password","RegisterPage","dispatch","useDispatch","useState","user","setUser","handleChange","target","value","prevUser","style","width","margin","borderStyle","as","background","color","paddingLeft","onSubmit","event","preventDefault","authOperations","autoComplete","className","controlId","type","placeholder","onChange","variant","marginLeft"],"sourceRoot":""}